# ------------------------------------------------------------
# Zsh Interactive Config
# ------------------------------------------------------------

# Only run the rest for interactive shells
[[ $- != *i* ]] && return

# ------------------------------------------------------------
# 0) Source login profile once (guarded)
# ------------------------------------------------------------

if [[ -z ${PROFILE_SOURCED:-} && -r ~/.zprofile ]]; then
    source ~/.zprofile
fi

# ------------------------------------------------------------
# 1) SSH Agent (Apple keychain; add id_ed* keys if not loaded)
# ------------------------------------------------------------

for key in "$HOME"/.ssh/id_ed*; do
    [[ -f $key && $key != *.pub ]] || continue
    # Skip if already added
    if ssh-add -l 2>/dev/null | grep -q " $(ssh-keygen -lf "$key" | awk '{print $2}') "; then
        continue
    fi
    ssh-add --apple-use-keychain "$key" >/dev/null 2>&1
done

# ------------------------------------------------------------
# 2) Keybindings & basics
# ------------------------------------------------------------

bindkey -e                           # Emacs bindings
bindkey '^p' history-search-backward
bindkey '^n' history-search-forward

# Fast prompt newline between commands (nice for readability)
precmd() {
    if [[ -z "$NEW_LINE_BEFORE_PROMPT" ]]; then
        NEW_LINE_BEFORE_PROMPT=1
    elif [[ "$NEW_LINE_BEFORE_PROMPT" -eq 1 ]]; then
        echo ""
    fi
}

# Optional clear screen at shell start (kept from your config)
clear

# ------------------------------------------------------------
# 3) Tooling env hooks (mise, sdkman, etc.)
# ------------------------------------------------------------

# mise (activate toolchains)
if command -v mise >/dev/null 2>&1; then
    eval "$(mise activate zsh)"
fi

# SDKMAN (Java toolchains)
if [[ -r /opt/homebrew/opt/sdkman-cli/libexec/bin/sdkman-init.sh ]]; then
    sdk() { unfunction sdk 2>/dev/null; source /opt/homebrew/opt/sdkman-cli/libexec/bin/sdkman-init.sh; sdk "$@"; }
fi

# ------------------------------------------------------------
# 4) History settings
# ------------------------------------------------------------

HISTSIZE=5000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase

setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

# ------------------------------------------------------------
# 5) Aliases
# ------------------------------------------------------------

# Better ls (GNU-style flags; you already use them—keeping as-is)
LS_COMMON="--color=auto --literal"
alias ls="command ls $LS_COMMON -lh"
alias lst="command ls $LS_COMMON -lth"
alias lsd="command ls $LS_COMMON -ldh .*"
alias lsdt="command ls $LS_COMMON -ldth .*"

# FZF helpers
alias of='fzf --print0 | xargs -0 -o open'
alias cf='cd "$(find . -type d -not -path "*/.git*" -not -path "./.*" | sed "s|^\./||" | sort | fzf || pwd)"'
alias cf1='cd "$(find . -maxdepth 1 -type d -not -path "*/.git*" -not -path "./.*" | sed "s|^\./||" | sort | fzf || pwd)"'

# Compilers
alias gcc='gcc-14'
alias g++='g++-14'

# Misc
alias grep='grep --color=auto'
alias clear='unset NEW_LINE_BEFORE_PROMPT && clear'
alias dirs='dirs -v'
alias fastfetch='fastfetch | lolcat -F 0.097 -S 30 -a -d 1 -s 35'
# alias fastfetch='fastfetch | lolcat -F 0.05 -S 22 -a -d 1 -s 20'
alias forsay='\fortune > a.txt | cowsay && say -f a.txt && rm a.txt'
alias fortune='fortune | cowsay'
alias gg='git-graph --style round'
alias zsh='source ~/.zshrc'

# ------------------------------------------------------------
# 6) FZF appearance
# ------------------------------------------------------------

export FZF_DEFAULT_OPTS='
--height=40% --layout=reverse --info=inline --border --margin=1 --padding=1
--color=fg:#c0caf5,fg+:#16161e
--pointer=">"
--color=bg:-1,bg+:#9ece6a
--color=hl:#fa2d90,hl+:#16161e
--color=gutter:#414868
--color=scrollbar:#414868
--color=info:#9ece6a,pointer:#16161e
--color=border:#414868,spinner:#7aa2f7,header:#7E8E91,marker:#F92672,prompt:#9ece6a'

# ------------------------------------------------------------
# 7) ls/dir colors
# ------------------------------------------------------------

export LS_COLORS="di=34:ln=35:so=32:pi=33:ex=31:bd=46;30:cd=43;30:su=37;41:sg=30;43:tw=30;42:ow=34;42:"

# ------------------------------------------------------------
# 8) Completion system (must precede any compdef usage)
# ------------------------------------------------------------

# Completion
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|=*' 'l:|=* r:|=*'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"

# Load & cache completion safely
autoload -Uz compinit

# Optional: versioned cache so upgrades don’t break comps
compinit -d ~/.cache/zsh/zcompdump-$ZSH_VERSION

# GitHub CLI completion
if command -v gh >/dev/null 2>&1; then
    eval "$(gh completion -s zsh)"
fi

# ------------------------------------------------------------
# 9) Man page styling
# ------------------------------------------------------------

export LESS_TERMCAP_mb=$(tput bold; tput setaf 2)   # green
export LESS_TERMCAP_md=$(tput bold; tput setaf 2)   # green
export LESS_TERMCAP_so=$(tput bold; tput rev; tput setaf 3) # yellow
export LESS_TERMCAP_se=$(tput rmso; tput sgr0)
export LESS_TERMCAP_us=$(tput smul; tput setaf 4)   # blue
export LESS_TERMCAP_me=$(tput sgr0)

# ------------------------------------------------------------
# 10) Sources: prompt, functions, plugins
# ------------------------------------------------------------

# Prompt
[[ -r ~/.zsh/prompt.zsh ]] && source ~/.zsh/prompt.zsh

# Custom functions
for func in ~/.zsh/functions/*.zsh; do
    source "$func"
done

# Plugins: keep autosuggestions before syntax-highlighting
[[ -r /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]] && \
    source /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh

# Syntax highlighting should be last
[[ -r /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]] && \
    source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
