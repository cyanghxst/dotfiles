# ---------------------------------------- 
# General
# ---------------------------------------- 

# Emacs key bindings
bindkey -e

# ---------------------------------------- 
# Environment Variables
# ---------------------------------------- 

# Term
export TERM=xterm-256color

# Default editor
export EDITOR='nvim'

# Locale
export LANG=en_US.UTF-8

# Paths
export PATH="/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/local/bin:/opt/local/sbin:/Users/cyanghxst/.cargo/bin:/Users/cyanghxst/.local/share/bob/nvim-bin:$PATH"
export PATH="/opt/homebrew/opt/openjdk@11/bin:$PATH"
export PATH="$PATH:/Library/TeX/texbin"
export DYLD_LIBRARY_PATH="/opt/homebrew/lib:$DYLD_LIBRARY_PATH"
export DYLD_FALLBACK_LIBRARY_PATH="/opt/homebrew/lib:/usr/lib"

# pyenv Environment
export PYENV_ROOT="$HOME/.pyenv"
if [[ -d $PYENV_ROOT/bin ]]; then
    export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init --path)"
fi

# rbenv
eval "$(rbenv init -)"

# Default grep color
export GREP_OPTIONS='--color=always'
export GREP_COLOR='0;94' # dull blue

# ---------------------------------------- 
# Source
# ---------------------------------------- 

# Source zsh-syntax-highlighting
source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# Source zsh-autosuggestions
source /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh

# Brew source
if [ "$(arch)" = "arm64" ]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
else
    eval "$(/usr/local/bin/brew shellenv)"
fi

# pyenv
if command -v pyenv 1>/dev/null 2>&1; then
    eval "$(pyenv init -)"
fi

# ---------------------------------------- 
# Aliases
# ---------------------------------------- 

alias ls='\ls -Glh'
alias lst='\ls -Glth'
alias lsd='\ls -Gldh .*'
alias lsdt='\ls -Gldth .*'
# alias brew='env PATH="${PATH//$(pyenv root)\/shims:/}" brew'
alias fortune='fortune | cowsay'
alias cdc='cd && clear'
alias cdd='cd ~/Downloads && ls'
alias clear='unset NEW_LINE_BEFORE_PROMPT && clear'
alias reset='unset NEW_LINE_BEFORE_PROMPT && reset'
alias forsay='\fortune > a.txt | cowsay && say -f a.txt && rm a.txt'
alias pipes.sh='pipes.sh | lolcat'
alias nf='fzf --print0 | xargs -0 -o nvim'
alias of='fzf --print0 | xargs -0 -o open'
alias keka='/Applications/Keka.app/Contents/MacOS/Keka --cli'
alias gg='git-graph --style round'
alias tm='transmission-cli'
alias venv='source ~/.venv/bin/activate'
alias zsh='source ~/.zshrc'

# ---------------------------------------- 
# Fzf color options
# ---------------------------------------- 

export FZF_DEFAULT_OPTS='
--height=40% --layout=reverse --info=inline --border --margin=1 --padding=1
--color=fg:#c0caf5,fg+:#16161e
--color=bg:-1,bg+:#9ece6a
--color=hl:#fa2d90,hl+:#16161e
--color=gutter:#414868
--color=scrollbar:#16161e
--color=info:#9ece6a,pointer:#16161e
--color=border:#414868,spinner:#7aa2f7,header:#7E8E91,marker:#F92672,prompt:#9ece6a'

# ---------------------------------------- 
# Wine64
# ---------------------------------------- 

wine-gptk() {
    WINEESYNC=1 WINEPREFIX=~/my-game-prefix $(brew --prefix game-porting-toolkit)/bin/wine64 "$@"
}

# ---------------------------------------- 
# Tab Completion Settings 
# ---------------------------------------- 

zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|=*' 'l:|=* r:|=*'
autoload -Uz compinit && compinit

# ---------------------------------------- 
# Prompt Settings
# ---------------------------------------- 

function precmd() {
    if [ -z "$NEW_LINE_BEFORE_PROMPT" ]; then
        NEW_LINE_BEFORE_PROMPT=1
    elif [ "$NEW_LINE_BEFORE_PROMPT" -eq 1 ]; then
        echo ""
    fi
}

clear

# ---------------------------------------- 
# Manual Page Settings
# ---------------------------------------- 

export LESS_TERMCAP_mb=$(tput bold; tput setaf 2) # green
export LESS_TERMCAP_md=$(tput bold; tput setaf 2) # green
export LESS_TERMCAP_so=$(tput bold; tput rev; tput setaf 3) # yellow
export LESS_TERMCAP_se=$(tput rmso; tput sgr0)
export LESS_TERMCAP_us=$(tput smul; tput setaf 4) # blue
export LESS_TERMCAP_me=$(tput sgr0)

# ---------------------------------------- 
# Josh Dick's zsh prompt
# ---------------------------------------- 

setopt prompt_subst
autoload -U colors && colors

ssh_info() {
    [[ "$SSH_CONNECTION" != '' ]] && echo '%(!.%{$fg[red]%}.%{$fg[yellow]%})%n%{$reset_color%}@%{$fg[green]%}%m%{$reset_color%}:' || echo ''
}

git_info() {
    ! git rev-parse --is-inside-work-tree > /dev/null 2>&1 && return

    local GIT_LOCATION=${$(git symbolic-ref -q HEAD || git name-rev --name-only --no-undefined --always HEAD)#(refs/heads/|tags/)}

    local AHEAD="%F{#456841}+NUM%{$reset_color%}"
    local BEHIND="%F{#684141}-NUM%{$reset_color%}"
    local MERGING="%F{#614168}󱐌%{$reset_color%}"
    local UNTRACKED="%F{#684141}%{$reset_color%}"
    local MODIFIED="%F{#676841}%{$reset_color%}"
    local STAGED="%F{#456841}%{$reset_color%}"

    local -a DIVERGENCES
    local -a FLAGS

    local NUM_AHEAD="$(git log --oneline @{u}.. 2> /dev/null | wc -l | tr -d ' ')"
    if [ "$NUM_AHEAD" -gt 0 ]; then
        DIVERGENCES+=( "${AHEAD//NUM/$NUM_AHEAD}" )
    fi

    local NUM_BEHIND="$(git log --oneline ..@{u} 2> /dev/null | wc -l | tr -d ' ')"
    if [ "$NUM_BEHIND" -gt 0 ]; then
        DIVERGENCES+=( "${BEHIND//NUM/$NUM_BEHIND}" )
    fi

    local GIT_DIR="$(git rev-parse --git-dir 2> /dev/null)"
    if [ -n $GIT_DIR ] && test -r $GIT_DIR/MERGE_HEAD; then
        FLAGS+=( "$MERGING" )
    fi

    if [[ -n $(git ls-files --other --exclude-standard 2> /dev/null) ]]; then
        FLAGS+=( "$UNTRACKED" )
    fi

    if ! git diff --quiet 2> /dev/null; then
        FLAGS+=( "$MODIFIED" )
    fi

    if ! git diff --cached --quiet 2> /dev/null; then
        FLAGS+=( "$STAGED" )
    fi

    local -a GIT_INFO
    GIT_INFO+=( "%F{#414868}on%{$reset_color%}" )
    [[ ${#FLAGS[@]} -ne 0 ]] && GIT_INFO+=( "${(j::)FLAGS}" )
    GIT_INFO+=( "%F{#414868}$GIT_LOCATION%{$reset_color%}" )
    [ -n "$GIT_STATUS" ] && GIT_INFO+=( "$GIT_STATUS" )
    [[ ${#DIVERGENCES[@]} -ne 0 ]] && GIT_INFO+=( "${(j::)DIVERGENCES}" )
    echo "${(j: :)GIT_INFO}"
}

PS1='$(ssh_info)%F{#414868}%~%u $(git_info)
%(?.%F{#c0caf5}.%F{#f7768e})%(!.#.󱐋)%{$reset_color%} '

# PS1='$(ssh_info)%F{#414868}%~%u $(git_info)
# %(?.%F{#c0caf5}.%F{#f7768e})%(!.#.✦)%{$reset_color%} '

# SDK man
export SDKMAN_DIR=$(brew --prefix sdkman-cli)/libexec
[[ -s "${SDKMAN_DIR}/bin/sdkman-init.sh" ]] && source "${SDKMAN_DIR}/bin/sdkman-init.sh"
